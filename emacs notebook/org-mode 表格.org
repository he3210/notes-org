#+TITLE: org-mode 表格

* 参考

[[https://orgmode.org/manual/Tables.html][emacs org-mode 表格官方参考手册]]

[[https://orgmode.org/worg/org-tutorials/tables.html][Org tutorial for tables]]

[[https://orgmode.org/worg/org-tutorials/org-lookups.html][Org tutorial on table lookup functions]]

[[https://orgmode.org/worg/org-symbols.html][org-mode 字符转义]]

[[http://xuzhengchao.com/reading/orgmode-manual.html][org-mode manual 阅读笔记]]

[[http://www.zmonster.me/2016/06/03/org-mode-table.html][表格基本操作&公式&绘图]]

* org-mode 表格常用快捷键

#+CAPTION: org-mode 表格快捷键
| 快捷键           | 描述                                                                                                         |
|------------------+--------------------------------------------------------------------------------------------------------------|
| C-c \vert [fn:1] | 创建表格；或选中以 , 分割 cell 的表格，使用该快捷键将其转换成表格                                            |
|------------------+--------------------------------------------------------------------------------------------------------------|
| TAB              | 调整表格，将光标移到下一个区域，必要时新建一行                                                               |
| S-TAB            | 调整表格，将光标移到上一个区域                                                                               |
| RET              | 调整表格，将光标移到下一行，必要时会新建一行                                                                 |
| C-c C-c          | 调整格式化表格，不移动光标                                                                                   |
|------------------+--------------------------------------------------------------------------------------------------------------|
| M-LEFT/RIGHT     | 左/右移当前列                                                                                                |
| M-S-LEFT         | 删除当前列。删除后，之前写的公式中的坐标也会相应发生改变，所以尽量用快捷键删除列，不要手动删。其它快捷键同理 |
| M-S-RIGHT        | 在光标位置左边添加一列                                                                                       |
|------------------+--------------------------------------------------------------------------------------------------------------|
| M-UP/DOWN        | 上/下移当前行                                                                                                |
| C-c -            | 在当前行下面添加一个水平线。如果带前缀，则在上面添加一行水平线                                               |
| C-c RET          | 在当前行下面添加一个水平线。并将光标移动到下一行                                                             |
|------------------+--------------------------------------------------------------------------------------------------------------|
| C-c '            | 将光标移动到表格内某个 cell 中，按该快捷键可编辑该 cell 的内容。支持输入表达式来计算该 cell 值               |
| C-c SPC          | 清空光标下的 cell 的值                                                                                       |
| M-a              | 移动光标到当前 cell 的开始，或移到上一个 cell 的开始                                                         |
| M-e              | 移动光标到当前 cell 的末尾，或移到下一个 cell 的末尾                                                         |
|------------------+--------------------------------------------------------------------------------------------------------------|
| C-c ^            | 将表排序。当前位置所在的列作为排序的依据。排序在距当前位置最近的两个水平线之间的行（或者整个表）中进行       |
|------------------+--------------------------------------------------------------------------------------------------------------|
| C-c }            | 在 org-mode 显示/隐藏表的行号和列号                                                                          |

* 自动计算

** 计算单个 cell 值

操作方法一：
+ 光标位于表格内某个 cell 中，按快捷键 =C-c '= 进入一个临时 buffer。
+ 在其中编辑 ~@2$4=$2*$3~ 。然后按快捷键 =C-c C-c= 退出临时 buffer。
+ 按快捷键 =C-u C-c C-c= 执行表达式。得到最终结果（该例中的第二个表格）

操作方法二：
+ 如该例中的第一个表格，在 cell 中直接编辑表达式，按快捷键 =C-c C-c= 执行这个 cell 中的表达式。得到第二个表格

#+BEGIN_SRC org
#+CAPTION: 购菜支出
|      | 数量（公斤） | 单价（元） | 总额（元） |
|------+--------------+------------+------------|
| 黄瓜 |            3 |          3 | :=$2*$3    |
| 白菜 |            3 |          4 |            |
| 豆芽 |            6 |          2 |            |
| 青椒 |            2 |          1 |            |
#+TBLFM: 

#+CAPTION: 购菜支出
|      | 数量（公斤） | 单价（元） | 总额（元） |
|------+--------------+------------+------------|
| 黄瓜 |            3 |          3 |          9 |
| 白菜 |            3 |          4 |            |
| 豆芽 |            6 |          2 |            |
| 青椒 |            2 |          1 |            |
#+TBLFM: @2$4=$2*$3
#+END_SRC

- =@2= ::  表示第二行当前列
- =$3= ::  表示当前行第三列
- ~:=~ ::  表示只计算这一项
- =#+TBLFM=:   ::    在该行添加公式，可通过方法一、方法二间接添加公式到这里，也可以直接在这里写公式
- =C-c C-c=   ::   光标在某个 cell 中，才能使用该快捷键调用表达式计算该 cell 的值
- =C-u C-c C-c=  :: 计算所有公式

** 批量自动计算

*** 例一：单表 2 个域相乘

#+BEGIN_SRC org
#+CAPTION: 购菜支出
|      | 数量（公斤） | 单价（元） | 总额（元） |
|------+--------------+------------+------------|
| 黄瓜 |            3 |          3 |          9 |
| 白菜 |            3 |          4 |         12 |
| 豆芽 |            6 |          2 |         12 |
| 青椒 |            2 |          1 |          2 |
#+TBLFM: @2$4=$2*$3::@3$4..@5$4=$2*$3
#+END_SRC

- =#+TBLFM:=   ::    公式间用 =::= 隔开
- =@3$4..@5$4= ::    表示一个区域。第三行的第四个单元格 —— 第五行的第四个单元格，一共 3 个单元格。它是一个向量

*** 例二：对另外一个表列求和

这个例子包含了常量的设置、表的远程引用、附加模式的使用、calc 公式、lisp 公式等

#+BEGIN_SRC org

#+NAME: circle
#+CONSTANTS: pi=3.14
#+CAPTION: 圆表
|     | 半径 |  周长 |  面积 |
|-----+------+-------+-------|
| 圆1 |    1 |  6.28 |  3.14 |
| 圆2 |    2 | 12.56 | 12.56 |
| 圆3 |    3 | 18.84 | 28.26 |
#+TBLFM: $3=2*$2*$pi
#+TBLFM: $4=$2^2*$pi

| 周长和 | 面积和 |
|--------+--------|
|  37.68 |  43.96 |
#+TBLFM: @2$1='(+ remote(circle, @2$3..@>$3));N::@2$2='(+ remote(circle, @2$4..@>$4));N

#+END_SRC

- =#+NAME:= :: 表格唯一标识，可用来标识这个表。比如 =remote(circle, @23..@>$3)= 就使用了它
- =#+CONSTANTS:= ::  定义局部常量，多个常量可以用空格分割。常量前加 =$= 即可引用，例如 =$pi=
- =remote(circle, @2$3..@>$3)=  :: 引用表 circle 中的数据，circle 是 =#+NAME:= 定义的
- =@>$3= ::  最后一行第三列
- ='(+ remote(circle, @2$3..@>$3));N= ::  以 ='(= 开头的表达式会被解析为 lisp 代码公式而不再是 calc 公式。此时默认情况下，表格中的内容会被当成字符串。如果需要将其处理为数字，就需要在末尾添加 =;N=
- =;N= ::  这是一个[[*附加模式][附加模式]]，附加模式可以用于计算特定格式的内容。公式和附加模式之间用 =;= 隔开。 =;N= 表示将表格中的内容处理成数字


其它相关但没用到的知识点：
- =@#=      ::       当前行的行号
- =$#=      ::       当前列的列号
- =@-1$-3=  ::       上一行，当前列左边第三列
- =@0=      ::       当前行
- ~calc 公式~ ::     =/= 优先级低于 =*= 。所以公式 ~$4=$1/$2*$3~ 实际为 ~$4=$1/($2*$3)~ 。公式末尾可以根据需要添加[[*附加模式][附加模式]]
- ~lisp 公式~ ::     以 ='(= 开头的表达式会被解析为 lisp 公式。在公式末尾根据需要来添加[[*附加模式][附加模式]]

*** 例三：使用唯一关键字关联 2 张表

根据汇率批量计算转换币种后的消费

#+BEGIN_SRC org
#+NAME: rates
| currency        | abbreviation | euros |
|-----------------+--------------+-------|
| euro            | eur          |     1 |
| Norwegian krone | nok          |  0.14 |
| Swedish krona   | sek          |  0.12 |
| US dollar       | usd          |  0.77 |

#+NAME: cost
|  date | expense          |  sum | currency | rate |   euros |
|-------+------------------+------+----------+------+---------|
|  1.3. | flights          |  324 | eur      |    1 |     324 |
|  4.6. | books and maps   |  243 | usd      | 0.77 |  187.11 |
| 30.7. | rental car       | 8300 | sek      | 0.12 |    996. |
|  2.7. | hotel            | 1150 | sek      | 0.12 |    138. |
|  2.7. | lunch            |  190 | sek      | 0.12 |    22.8 |
|  3.7. | fishing licenses | 1400 | nok      | 0.14 |    196. |
|  3.7. | gasoline         |  340 |          |  nil | 340 nil |
#+TBLFM: $5='(org-lookup-first $4 '(remote(rates,@2$2..@>$2)) '(remote(rates,@2$3..@>$3)))::$6=$5*$3
#+END_SRC

- ~'(org-lookup-first $4 '(remote(rates,@2$2..@>$2)) '(remote(rates,@2$3..@>$3)))~ :: =org-lookup-first= 函数原型为 =(org-lookup-first VAL S-LIST R-LIST &optional PREDICATE)= 。它表示在 rates 表的第二列查找和 cost 表的第四列当前行相同的元素，找到第一个匹配的元素就返回，返回值是该元素所在行对应的第三列的元素值
- =(org-lookup-first VAL S-LIST R-LIST &optional PREDICATE)= :: 查找列表 S-LIST 中和 VAL 相同（当断言参数 PREDICATE 省略时，默认为等于号）的第一个元素，找到后，返回该元素所在行对应在列表 R-LIST 上的元素

*** 例四：按照范围进行匹配

批量计算学生的分数级别

#+BEGIN_SRC org
#+TBLNAME: grade-boundaries
| lower bound | grade |
|-------------+-------|
|           0 | F     |
|          10 | D     |
|          20 | C     |
|          30 | B     |
|          40 | A     |

| student | marks | grade |
|---------+-------+-------|
| X       |    30 | B     |
| Y       |    29 | C     |
| Z       |     5 | F     |
| W       |    55 | A     |
#+TBLFM: $3='(org-lookup-last $2 '(remote(grade-boundaries,@2$1..@>$1)) '(remote(grade-boundaries,@2$2..@>$2)) '>=);L
#+END_SRC

- =;L=  :: 因为公式中需要用的表的元素值有些是数字，有些值是符号。所以要使用 =L=
- ~(org-lookup-last VAL S-LIST R-LIST &optional PREDICATE)~  :: 查找列表 S-LIST 中最后一个大于等于（当断言参数 PREDICATE 为 ~>=~ 时） VAL 的元素，找到后，返回该元素所在行对应在列表 R-LIST 上的元素

*** 例五：统计空 cell 数量

#+BEGIN_SRC org
| group | round 1 | round 2 |
|-------+---------+---------|
| A     |         |     2.4 |
| B     |     4.7 |      11 |
| C     |         |         |
| D     |       5 |         |
| E     |         |     7.2 |
| F     |     3.2 |     4.3 |
| G     |         |     4.4 |
| H     |         |       8 |
|-------+---------+---------|
| total | missing |       7 |
#+TBLFM: @>$3='(length(org-lookup-all "" '(@2$2..@-1$3) nil));E
#+END_SRC

- ='(@2$2..@-1$3)=  :: 因为上面的完整的公式要计算的是 =@>$3= 的值，也就是 =@10$3= 的值。所以在这里，=@-1= 就相当于 =@9$3= 。
- =(org-lookup-all VAL S-LIST R-LIST &optional PREDICATE)=  :: 在 S-LIST 查找所有匹配的元素，返回元素对应的位置在 R-LIST 的值。如果 R-LIST 是空，直接返回 S-LIST 中匹配到的项。断言 PREDICATE 省略表示默认为等于号
- =;E=  :: 表示在表格域的范围中保留空域
- =length=  :: 计算列表长度

*** 例六：根据分数排名

#+BEGIN_SRC org
| group | marks | rank |
|-------+-------+------|
| A     |    22 |    2 |
| B     |    22 |    2 |
| C     |    14 |    4 |
| D     |    28 |    1 |
| E     |     9 |    5 |
#+TBLFM: $3='(+ 1 (length (org-lookup-all $2 '(@2$2..@>$2) nil '<)));N
#+END_SRC

*** 例七：从原始数据统计频率

#+BEGIN_SRC emacs-lisp
;; bounds 是含有 2 个元素的列表，表示取值范围。例如 (1 1.9)。用 (a b) 表示
;; el 是一个数值
;; 该函数用于判断 el 是否在区间 [a, b] 内
;; car 函数返回列表的第一个元素
;; cadr 函数删除列表的第一个元素，并返回结果列表的第一个元素
(defun in-interval (bounds el)
  (and (>= el (car bounds)) (<= el (cadr bounds))))
#+END_SRC

#+BEGIN_SRC org
#+TBLNAME: raw-data
| group | result |
|-------+--------|
| A     |    2.3 |
| B     |    4.2 |
| C     |    1.1 |
| D     |    3.6 |
| E     |    4.5 |
| F     |    2.4 |
| G     |    1.0 |
| H     |    2.3 |
| I     |    2.8 |

| lower bound | upper bound | frequency |
|-------------+-------------+-----------|
|           1 |         1.9 |         2 |
|           2 |         2.9 |         4 |
|           3 |         3.9 |         1 |
|           4 |         4.9 |         2 |
#+TBLFM: $3='(length (org-lookup-all '($1 $2) '(remote(raw-data,@2$2..@>$2)) nil 'in-interval));N
#+END_SRC


** 附加模式

附件模式可以用于计算特定格式的内容, 或者格式化数据. org 支持公式后面添加任意数量的附加模式, 公式和附加模式之间用";"隔开. 目前支持的附加模式包括:

| 附加模式    | 描述	                                                                                                                                                                                          |
|-------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| pN          | 计算精度。                                                                                                                                                                                            |
| nN/sN/eN/fN | 设置结果输出格式。n3 表示输出 3 位有效数字；s3 输出结果为科学计数法，3位有效数字(1.45e0)；e3: 输出结果为工程计数法，3位有效数字(0.145e1)；f3: 输出结果精确至小数点后3位                               |
| D/R         | 计算时使用角度制还是弧度制(如三角函数)                                                                                                                                                                |
| F/S         | 分数还是符号(当为 S 时，若结果不为整数，则显示式子本身，如: sqrt(6))                                                                                                                                  |
| T/t         | 时间计算，要求用于计算的值是"HH:MM[:SS]"的形式，当使用 T 时，输出结果是 "HH:MM:SS" 形式；使用 "t" 时，结果显示为一个数值，默认情况下单位是小时，可以通过变量 org-table-duration-custome-format 来设置 |
| E           | 不使用时，所有空白单元格都会被跳过，不会包含在计算过程中;当使用时，如果还使用了 N ，则用 "0" 填充；否则，在普通公式中，用 "nan" 填充，在 emacs lisp 公式中，用空字符串填充                            |
| N           | 使用时，将所有域的值视为数字，对于非数值型，用 0 替代                                                                                                                                                 |
| L           | 只用于 emacs lisp 公式，后续                                                                                                                                                                          |

例如：
- =$1+$2;%.2f=      :: 保留 2 位小数
- =tan($1);Dp3s1=   :: 参数单位为度，计算精度为 3，科学表示


* 表格宽度和对齐

- =<l>= =<r>= :: 左对齐和右对齐
- =<16>= :: 本列宽度最大为 16。宽度和对齐标记可以结合起来写

#+BEGIN_SRC org
|      | 数量（公斤）     | 单价（元） | 总额（元） |
|------+------------------+------------+------------|
|      | <l16>            |      <r10> |            |
| 黄瓜 | 3                |          3 |            |
| 白菜 | 3                |          4 |            |
| 豆芽 | 6                |          2 |            |
| 青椒 | 2                |          1 |            |
#+END_SRC

* Footnotes

[fn:1] 表格中输出竖线 \vert，需要在 org 表格中输入 ~\vert~ 。如果需要输出 ~\vert~ ，可以在 org 文档中输入 ~=\vert=~ 或 =~\vert~=

